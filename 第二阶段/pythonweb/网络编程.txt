网络基本概念
1.OSI 七层模型是什么
2.三次握手 四次挥手
3.tcp和udp的差别

网络主机：

套接字
流式套接字    tcp
数据报套接字   udp


*************************************
tcp:
服务端：
socket()  -->  bind()  --> listen() -->accept()  -->recv/send --> close()


基于tcp协议的是编程

import  socket

socket.socket(socket_family = AF_INET,
              socket_type = SOCK_STREAM,
							proto = 0)

功能： 创建套接字
参数： socket_family：选择地址族类型，AF_INET 基于ipv4的网络                        传输
       socket_type : 表示创建套接字类型  SOCK_STREAM  流式
			                                   SOCK_DGRAM  数据报
			 proto ：子协议类型  0

返回值： 套接字对象


sockfd.bind()
功能 ： 绑定地址
参数 ： 元组 (ip,port)  e.g.  ('192.168.1.3',8888)

sockfd.listen(n)
功能： 将套接字设置为监听套接字
参数 ： n是一个正整数，表示监听等待队列的大小

connfd,addr = sockfd.accept()
功能：等待接收客户端连接请求
返回值： connfd    新的客户端连接套接字
         addr    客户端的地址

data = connfd.recv(buffersize)
功能 ： 接收消息
参数 ： 一次最多接收的消息 字节数
返回值 ： 接收到的内容

n = connfd.send(data)
功能： 发送消息
参数： 要发送的内容    bytes
返回值 ： 实际发送的字节数

sockfd.close()
功能 ： 关闭套接字对象

客户端

connect()
功能 ： 发起连接
参数 ： 元组 同bind()

* 当连接断开后，对应套接字调用的recv不在阻塞立即返回空字串
* 当一端已经关闭，另外一端仍然试图send则会出现管道破裂

1. 客户端和服务端的套接字类型需要相同
2. accept和recv都是阻塞函数，在收发消息上必须注意防止死阻塞产    生

*****网络缓冲区：*****
*协调首发（处理）消息的速度
*减少交互次数

recv()特征
1.recv实际是从接收缓冲区接受内容，缓冲区为空会阻塞，否则一直接收

send()特征
1.send()实际是向缓冲区发送内容，缓冲区为满会阻塞。

tcp粘包：多次发送内容被一次接收
影响：如果每次发送的内容是一个独立理解的意思，此时粘包可能会造成歧义。

产生的原因：
1.tcp套接字以字节流的方式传输数据，消息之间没有边界；
2.连续发送素的比接受速度快
如何处理粘包：
1.消息结构化
2.用特殊符号间隔
3.做发送延迟，确保上次内容被完全接收
*******************************************************

二、基于udp的套接字编程
面向无连接的数据传输服务

服务端：
1.创建数据报套接字
sockfd = socket(AF_INET,SOCK_DGRAM)
2.绑定地址
sockfd.bind()
3.收发消息
data,addr = sockfd.recvfrom(buffersize)
功能:接收数据报套接字
参数：一次最多接收消息的大小
返回值：data 接收到的内容
       addr 收到消息发送者的地址

sockfd.sendto(data,addr)
功能：发送消息
参数：data 要发送的内容 bytes格式
    addr  目标地址
返回值：发送的字节数
4.关闭套接字
sockfd.close()

客户端：
创建
收发
关闭

*********************************************************

tcp流式套接字和udp数据报套接字的区别
1.tcp采用字节流，udp以数据报文
2.tcp会产生粘包，udp不会
3.tcp编程保证传输可靠性，udp则不保证
4.tcp需要listen, accept建立连接过程 ，udp无连接
5.tcp使用recv send ,udp用recvfrom sendto

********************************************************
补充：
sendall()
功能： 同send
返回值：发送成功返回None  发送失败返回异常

*********************************************************
属性：
s.family
s.type
s.fileno()
功能：获取套接字系统文件描述符
文件描述符：每一个IO事件操作系统都会分配一个不同的正整数与之匹配，该整数为此IO操作的
          文件描述符。

s.getsockname()
功能：获取套接字绑定的地址

s.getpeername()
功能：用户连接套接字，获取连接端地址

s.setsockopt(level,optname,value)
功能：设置套接字选项,丰富原有套接字的功能
参数：level：设置选项的类型 例如：SOL_SOCKET套接字基本设置
     optname:每个选项中的子选项
     value:要设置的值
